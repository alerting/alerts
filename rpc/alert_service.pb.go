// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc/alert_service.proto

package rpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import cap "github.com/alerting/alerts/cap"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_alert_service_cb41125567185730, []int{0}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type AlertExistsResponse struct {
	Exists               bool     `protobuf:"varint,1,opt,name=exists" json:"exists,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AlertExistsResponse) Reset()         { *m = AlertExistsResponse{} }
func (m *AlertExistsResponse) String() string { return proto.CompactTextString(m) }
func (*AlertExistsResponse) ProtoMessage()    {}
func (*AlertExistsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_alert_service_cb41125567185730, []int{1}
}
func (m *AlertExistsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AlertExistsResponse.Unmarshal(m, b)
}
func (m *AlertExistsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AlertExistsResponse.Marshal(b, m, deterministic)
}
func (dst *AlertExistsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlertExistsResponse.Merge(dst, src)
}
func (m *AlertExistsResponse) XXX_Size() int {
	return xxx_messageInfo_AlertExistsResponse.Size(m)
}
func (m *AlertExistsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AlertExistsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AlertExistsResponse proto.InternalMessageInfo

func (m *AlertExistsResponse) GetExists() bool {
	if m != nil {
		return m.Exists
	}
	return false
}

type AlertRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AlertRequest) Reset()         { *m = AlertRequest{} }
func (m *AlertRequest) String() string { return proto.CompactTextString(m) }
func (*AlertRequest) ProtoMessage()    {}
func (*AlertRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_alert_service_cb41125567185730, []int{2}
}
func (m *AlertRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AlertRequest.Unmarshal(m, b)
}
func (m *AlertRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AlertRequest.Marshal(b, m, deterministic)
}
func (dst *AlertRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlertRequest.Merge(dst, src)
}
func (m *AlertRequest) XXX_Size() int {
	return xxx_messageInfo_AlertRequest.Size(m)
}
func (m *AlertRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AlertRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AlertRequest proto.InternalMessageInfo

func (m *AlertRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type TimeQuery struct {
	Gte                  *timestamp.Timestamp `protobuf:"bytes,1,opt,name=gte" json:"gte,omitempty"`
	Gt                   *timestamp.Timestamp `protobuf:"bytes,2,opt,name=gt" json:"gt,omitempty"`
	Lte                  *timestamp.Timestamp `protobuf:"bytes,3,opt,name=lte" json:"lte,omitempty"`
	Lt                   *timestamp.Timestamp `protobuf:"bytes,4,opt,name=lt" json:"lt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TimeQuery) Reset()         { *m = TimeQuery{} }
func (m *TimeQuery) String() string { return proto.CompactTextString(m) }
func (*TimeQuery) ProtoMessage()    {}
func (*TimeQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_alert_service_cb41125567185730, []int{3}
}
func (m *TimeQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeQuery.Unmarshal(m, b)
}
func (m *TimeQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeQuery.Marshal(b, m, deterministic)
}
func (dst *TimeQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeQuery.Merge(dst, src)
}
func (m *TimeQuery) XXX_Size() int {
	return xxx_messageInfo_TimeQuery.Size(m)
}
func (m *TimeQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeQuery.DiscardUnknown(m)
}

var xxx_messageInfo_TimeQuery proto.InternalMessageInfo

func (m *TimeQuery) GetGte() *timestamp.Timestamp {
	if m != nil {
		return m.Gte
	}
	return nil
}

func (m *TimeQuery) GetGt() *timestamp.Timestamp {
	if m != nil {
		return m.Gt
	}
	return nil
}

func (m *TimeQuery) GetLte() *timestamp.Timestamp {
	if m != nil {
		return m.Lte
	}
	return nil
}

func (m *TimeQuery) GetLt() *timestamp.Timestamp {
	if m != nil {
		return m.Lt
	}
	return nil
}

type Coordinate struct {
	Lat                  float64  `protobuf:"fixed64,1,opt,name=lat" json:"lat,omitempty"`
	Lon                  float64  `protobuf:"fixed64,2,opt,name=lon" json:"lon,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Coordinate) Reset()         { *m = Coordinate{} }
func (m *Coordinate) String() string { return proto.CompactTextString(m) }
func (*Coordinate) ProtoMessage()    {}
func (*Coordinate) Descriptor() ([]byte, []int) {
	return fileDescriptor_alert_service_cb41125567185730, []int{4}
}
func (m *Coordinate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Coordinate.Unmarshal(m, b)
}
func (m *Coordinate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Coordinate.Marshal(b, m, deterministic)
}
func (dst *Coordinate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Coordinate.Merge(dst, src)
}
func (m *Coordinate) XXX_Size() int {
	return xxx_messageInfo_Coordinate.Size(m)
}
func (m *Coordinate) XXX_DiscardUnknown() {
	xxx_messageInfo_Coordinate.DiscardUnknown(m)
}

var xxx_messageInfo_Coordinate proto.InternalMessageInfo

func (m *Coordinate) GetLat() float64 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *Coordinate) GetLon() float64 {
	if m != nil {
		return m.Lon
	}
	return 0
}

type AlertsRequest struct {
	Start int32    `protobuf:"varint,1,opt,name=start" json:"start,omitempty"`
	Count int32    `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	Sort  []string `protobuf:"bytes,3,rep,name=sort" json:"sort,omitempty"`
	// alert
	Superseded    bool                  `protobuf:"varint,4,opt,name=superseded" json:"superseded,omitempty"`
	NotSuperseded bool                  `protobuf:"varint,5,opt,name=not_superseded,json=notSuperseded" json:"not_superseded,omitempty"`
	Status        cap.Alert_Status      `protobuf:"varint,6,opt,name=status,enum=cap.Alert_Status" json:"status,omitempty"`
	MessageType   cap.Alert_MessageType `protobuf:"varint,7,opt,name=message_type,json=messageType,enum=cap.Alert_MessageType" json:"message_type,omitempty"`
	Scope         cap.Alert_Scope       `protobuf:"varint,8,opt,name=scope,enum=cap.Alert_Scope" json:"scope,omitempty"`
	// info
	Language    string             `protobuf:"bytes,9,opt,name=language" json:"language,omitempty"`
	Certainty   cap.Info_Certainty `protobuf:"varint,10,opt,name=certainty,enum=cap.Info_Certainty" json:"certainty,omitempty"`
	Severity    cap.Info_Severity  `protobuf:"varint,11,opt,name=severity,enum=cap.Info_Severity" json:"severity,omitempty"`
	Urgency     cap.Info_Urgency   `protobuf:"varint,12,opt,name=urgency,enum=cap.Info_Urgency" json:"urgency,omitempty"`
	Headline    string             `protobuf:"bytes,13,opt,name=headline" json:"headline,omitempty"`
	Description string             `protobuf:"bytes,14,opt,name=description" json:"description,omitempty"`
	Instruction string             `protobuf:"bytes,15,opt,name=instruction" json:"instruction,omitempty"`
	Effective   *TimeQuery         `protobuf:"bytes,16,opt,name=effective" json:"effective,omitempty"`
	Onset       *TimeQuery         `protobuf:"bytes,17,opt,name=onset" json:"onset,omitempty"`
	Expires     *TimeQuery         `protobuf:"bytes,18,opt,name=expires" json:"expires,omitempty"`
	// Area
	AreaDescription      string      `protobuf:"bytes,19,opt,name=area_description,json=areaDescription" json:"area_description,omitempty"`
	Point                *Coordinate `protobuf:"bytes,20,opt,name=point" json:"point,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AlertsRequest) Reset()         { *m = AlertsRequest{} }
func (m *AlertsRequest) String() string { return proto.CompactTextString(m) }
func (*AlertsRequest) ProtoMessage()    {}
func (*AlertsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_alert_service_cb41125567185730, []int{5}
}
func (m *AlertsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AlertsRequest.Unmarshal(m, b)
}
func (m *AlertsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AlertsRequest.Marshal(b, m, deterministic)
}
func (dst *AlertsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlertsRequest.Merge(dst, src)
}
func (m *AlertsRequest) XXX_Size() int {
	return xxx_messageInfo_AlertsRequest.Size(m)
}
func (m *AlertsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AlertsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AlertsRequest proto.InternalMessageInfo

func (m *AlertsRequest) GetStart() int32 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *AlertsRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *AlertsRequest) GetSort() []string {
	if m != nil {
		return m.Sort
	}
	return nil
}

func (m *AlertsRequest) GetSuperseded() bool {
	if m != nil {
		return m.Superseded
	}
	return false
}

func (m *AlertsRequest) GetNotSuperseded() bool {
	if m != nil {
		return m.NotSuperseded
	}
	return false
}

func (m *AlertsRequest) GetStatus() cap.Alert_Status {
	if m != nil {
		return m.Status
	}
	return cap.Alert_STATUS_UNKNOWN
}

func (m *AlertsRequest) GetMessageType() cap.Alert_MessageType {
	if m != nil {
		return m.MessageType
	}
	return cap.Alert_MESSAGE_TYPE_UNKNOWN
}

func (m *AlertsRequest) GetScope() cap.Alert_Scope {
	if m != nil {
		return m.Scope
	}
	return cap.Alert_SCOPE_UNKNOWN
}

func (m *AlertsRequest) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *AlertsRequest) GetCertainty() cap.Info_Certainty {
	if m != nil {
		return m.Certainty
	}
	return cap.Info_CERTAINTY_UNKNOWN
}

func (m *AlertsRequest) GetSeverity() cap.Info_Severity {
	if m != nil {
		return m.Severity
	}
	return cap.Info_SEVERITY_UNKNOWN
}

func (m *AlertsRequest) GetUrgency() cap.Info_Urgency {
	if m != nil {
		return m.Urgency
	}
	return cap.Info_URGENCY_UNKNOWN
}

func (m *AlertsRequest) GetHeadline() string {
	if m != nil {
		return m.Headline
	}
	return ""
}

func (m *AlertsRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *AlertsRequest) GetInstruction() string {
	if m != nil {
		return m.Instruction
	}
	return ""
}

func (m *AlertsRequest) GetEffective() *TimeQuery {
	if m != nil {
		return m.Effective
	}
	return nil
}

func (m *AlertsRequest) GetOnset() *TimeQuery {
	if m != nil {
		return m.Onset
	}
	return nil
}

func (m *AlertsRequest) GetExpires() *TimeQuery {
	if m != nil {
		return m.Expires
	}
	return nil
}

func (m *AlertsRequest) GetAreaDescription() string {
	if m != nil {
		return m.AreaDescription
	}
	return ""
}

func (m *AlertsRequest) GetPoint() *Coordinate {
	if m != nil {
		return m.Point
	}
	return nil
}

type AlertHit struct {
	Id                   string     `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Alert                *cap.Alert `protobuf:"bytes,2,opt,name=alert" json:"alert,omitempty"`
	Info                 *cap.Info  `protobuf:"bytes,3,opt,name=info" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *AlertHit) Reset()         { *m = AlertHit{} }
func (m *AlertHit) String() string { return proto.CompactTextString(m) }
func (*AlertHit) ProtoMessage()    {}
func (*AlertHit) Descriptor() ([]byte, []int) {
	return fileDescriptor_alert_service_cb41125567185730, []int{6}
}
func (m *AlertHit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AlertHit.Unmarshal(m, b)
}
func (m *AlertHit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AlertHit.Marshal(b, m, deterministic)
}
func (dst *AlertHit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlertHit.Merge(dst, src)
}
func (m *AlertHit) XXX_Size() int {
	return xxx_messageInfo_AlertHit.Size(m)
}
func (m *AlertHit) XXX_DiscardUnknown() {
	xxx_messageInfo_AlertHit.DiscardUnknown(m)
}

var xxx_messageInfo_AlertHit proto.InternalMessageInfo

func (m *AlertHit) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AlertHit) GetAlert() *cap.Alert {
	if m != nil {
		return m.Alert
	}
	return nil
}

func (m *AlertHit) GetInfo() *cap.Info {
	if m != nil {
		return m.Info
	}
	return nil
}

type AlertsResponse struct {
	Total                int64       `protobuf:"varint,1,opt,name=total" json:"total,omitempty"`
	Hits                 []*AlertHit `protobuf:"bytes,2,rep,name=hits" json:"hits,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AlertsResponse) Reset()         { *m = AlertsResponse{} }
func (m *AlertsResponse) String() string { return proto.CompactTextString(m) }
func (*AlertsResponse) ProtoMessage()    {}
func (*AlertsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_alert_service_cb41125567185730, []int{7}
}
func (m *AlertsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AlertsResponse.Unmarshal(m, b)
}
func (m *AlertsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AlertsResponse.Marshal(b, m, deterministic)
}
func (dst *AlertsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlertsResponse.Merge(dst, src)
}
func (m *AlertsResponse) XXX_Size() int {
	return xxx_messageInfo_AlertsResponse.Size(m)
}
func (m *AlertsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AlertsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AlertsResponse proto.InternalMessageInfo

func (m *AlertsResponse) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *AlertsResponse) GetHits() []*AlertHit {
	if m != nil {
		return m.Hits
	}
	return nil
}

func init() {
	proto.RegisterType((*Empty)(nil), "rpc.Empty")
	proto.RegisterType((*AlertExistsResponse)(nil), "rpc.AlertExistsResponse")
	proto.RegisterType((*AlertRequest)(nil), "rpc.AlertRequest")
	proto.RegisterType((*TimeQuery)(nil), "rpc.TimeQuery")
	proto.RegisterType((*Coordinate)(nil), "rpc.Coordinate")
	proto.RegisterType((*AlertsRequest)(nil), "rpc.AlertsRequest")
	proto.RegisterType((*AlertHit)(nil), "rpc.AlertHit")
	proto.RegisterType((*AlertsResponse)(nil), "rpc.AlertsResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AlertServiceClient is the client API for AlertService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AlertServiceClient interface {
	// Get
	HasAlert(ctx context.Context, in *AlertRequest, opts ...grpc.CallOption) (*AlertExistsResponse, error)
	GetAlert(ctx context.Context, in *AlertRequest, opts ...grpc.CallOption) (*cap.Alert, error)
	// Find
	FindAlerts(ctx context.Context, in *AlertsRequest, opts ...grpc.CallOption) (*AlertsResponse, error)
	// Add
	AddAlert(ctx context.Context, in *cap.Alert, opts ...grpc.CallOption) (*Empty, error)
	AddAlerts(ctx context.Context, opts ...grpc.CallOption) (AlertService_AddAlertsClient, error)
}

type alertServiceClient struct {
	cc *grpc.ClientConn
}

func NewAlertServiceClient(cc *grpc.ClientConn) AlertServiceClient {
	return &alertServiceClient{cc}
}

func (c *alertServiceClient) HasAlert(ctx context.Context, in *AlertRequest, opts ...grpc.CallOption) (*AlertExistsResponse, error) {
	out := new(AlertExistsResponse)
	err := c.cc.Invoke(ctx, "/rpc.AlertService/HasAlert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertServiceClient) GetAlert(ctx context.Context, in *AlertRequest, opts ...grpc.CallOption) (*cap.Alert, error) {
	out := new(cap.Alert)
	err := c.cc.Invoke(ctx, "/rpc.AlertService/GetAlert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertServiceClient) FindAlerts(ctx context.Context, in *AlertsRequest, opts ...grpc.CallOption) (*AlertsResponse, error) {
	out := new(AlertsResponse)
	err := c.cc.Invoke(ctx, "/rpc.AlertService/FindAlerts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertServiceClient) AddAlert(ctx context.Context, in *cap.Alert, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/rpc.AlertService/AddAlert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertServiceClient) AddAlerts(ctx context.Context, opts ...grpc.CallOption) (AlertService_AddAlertsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_AlertService_serviceDesc.Streams[0], "/rpc.AlertService/AddAlerts", opts...)
	if err != nil {
		return nil, err
	}
	x := &alertServiceAddAlertsClient{stream}
	return x, nil
}

type AlertService_AddAlertsClient interface {
	Send(*cap.Alert) error
	CloseAndRecv() (*Empty, error)
	grpc.ClientStream
}

type alertServiceAddAlertsClient struct {
	grpc.ClientStream
}

func (x *alertServiceAddAlertsClient) Send(m *cap.Alert) error {
	return x.ClientStream.SendMsg(m)
}

func (x *alertServiceAddAlertsClient) CloseAndRecv() (*Empty, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(Empty)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for AlertService service

type AlertServiceServer interface {
	// Get
	HasAlert(context.Context, *AlertRequest) (*AlertExistsResponse, error)
	GetAlert(context.Context, *AlertRequest) (*cap.Alert, error)
	// Find
	FindAlerts(context.Context, *AlertsRequest) (*AlertsResponse, error)
	// Add
	AddAlert(context.Context, *cap.Alert) (*Empty, error)
	AddAlerts(AlertService_AddAlertsServer) error
}

func RegisterAlertServiceServer(s *grpc.Server, srv AlertServiceServer) {
	s.RegisterService(&_AlertService_serviceDesc, srv)
}

func _AlertService_HasAlert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AlertRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertServiceServer).HasAlert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.AlertService/HasAlert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertServiceServer).HasAlert(ctx, req.(*AlertRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertService_GetAlert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AlertRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertServiceServer).GetAlert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.AlertService/GetAlert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertServiceServer).GetAlert(ctx, req.(*AlertRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertService_FindAlerts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AlertsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertServiceServer).FindAlerts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.AlertService/FindAlerts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertServiceServer).FindAlerts(ctx, req.(*AlertsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertService_AddAlert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(cap.Alert)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertServiceServer).AddAlert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.AlertService/AddAlert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertServiceServer).AddAlert(ctx, req.(*cap.Alert))
	}
	return interceptor(ctx, in, info, handler)
}

func _AlertService_AddAlerts_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AlertServiceServer).AddAlerts(&alertServiceAddAlertsServer{stream})
}

type AlertService_AddAlertsServer interface {
	SendAndClose(*Empty) error
	Recv() (*cap.Alert, error)
	grpc.ServerStream
}

type alertServiceAddAlertsServer struct {
	grpc.ServerStream
}

func (x *alertServiceAddAlertsServer) SendAndClose(m *Empty) error {
	return x.ServerStream.SendMsg(m)
}

func (x *alertServiceAddAlertsServer) Recv() (*cap.Alert, error) {
	m := new(cap.Alert)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _AlertService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.AlertService",
	HandlerType: (*AlertServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HasAlert",
			Handler:    _AlertService_HasAlert_Handler,
		},
		{
			MethodName: "GetAlert",
			Handler:    _AlertService_GetAlert_Handler,
		},
		{
			MethodName: "FindAlerts",
			Handler:    _AlertService_FindAlerts_Handler,
		},
		{
			MethodName: "AddAlert",
			Handler:    _AlertService_AddAlert_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "AddAlerts",
			Handler:       _AlertService_AddAlerts_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "rpc/alert_service.proto",
}

func init() {
	proto.RegisterFile("rpc/alert_service.proto", fileDescriptor_alert_service_cb41125567185730)
}

var fileDescriptor_alert_service_cb41125567185730 = []byte{
	// 781 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x94, 0x51, 0x6f, 0xe3, 0x44,
	0x10, 0xc7, 0x95, 0xa4, 0x4e, 0x93, 0x49, 0x9b, 0xb6, 0xdb, 0xea, 0x58, 0x45, 0xe2, 0x08, 0x11,
	0x45, 0x29, 0x1c, 0x2e, 0x14, 0x21, 0xc4, 0xe3, 0xe9, 0x38, 0xb8, 0x7b, 0xe0, 0x81, 0x6d, 0x79,
	0xe2, 0xa1, 0x72, 0xed, 0x89, 0xbb, 0x92, 0xb3, 0x6b, 0x76, 0xc7, 0xd5, 0xe5, 0x8d, 0x6f, 0xc6,
	0x97, 0xe2, 0x03, 0x20, 0xcf, 0xda, 0xb5, 0x81, 0x3b, 0xf5, 0x21, 0x92, 0xe7, 0xff, 0xff, 0xcd,
	0x78, 0xd6, 0xd9, 0x19, 0xf8, 0xc8, 0x95, 0xe9, 0x65, 0x52, 0xa0, 0xa3, 0x5b, 0x8f, 0xee, 0x41,
	0xa7, 0x18, 0x97, 0xce, 0x92, 0x15, 0x23, 0x57, 0xa6, 0x8b, 0x4f, 0x72, 0x6b, 0xf3, 0x02, 0x2f,
	0x59, 0xba, 0xab, 0x36, 0x97, 0xa4, 0xb7, 0xe8, 0x29, 0xd9, 0x96, 0x81, 0x5a, 0xac, 0x73, 0x4d,
	0xf7, 0xd5, 0x5d, 0x9c, 0xda, 0x6d, 0xa8, 0xa2, 0x4d, 0x1e, 0x1e, 0xfc, 0x65, 0x9a, 0x94, 0xf5,
	0x2f, 0x90, 0xab, 0x7d, 0x88, 0x5e, 0x6f, 0x4b, 0xda, 0xad, 0xbe, 0x82, 0xd3, 0x97, 0x35, 0xf0,
	0xfa, 0x9d, 0xf6, 0xe4, 0x15, 0xfa, 0xd2, 0x1a, 0x8f, 0xe2, 0x19, 0x8c, 0x91, 0x15, 0x39, 0x58,
	0x0e, 0xd6, 0x13, 0xd5, 0x44, 0xab, 0xe7, 0x70, 0xc0, 0xb8, 0xc2, 0x3f, 0x2a, 0xf4, 0x24, 0xe6,
	0x30, 0xd4, 0x19, 0x33, 0x53, 0x35, 0xd4, 0xd9, 0xea, 0xaf, 0x01, 0x4c, 0x6f, 0xf4, 0x16, 0x7f,
	0xad, 0xd0, 0xed, 0xc4, 0x0b, 0x18, 0xe5, 0x84, 0x6c, 0xcf, 0xae, 0x16, 0x71, 0x68, 0x3f, 0x6e,
	0xdb, 0x8f, 0x6f, 0xda, 0xf6, 0x55, 0x8d, 0x89, 0x2f, 0x60, 0x98, 0x93, 0x1c, 0x3e, 0x09, 0x0f,
	0x73, 0xaa, 0x2b, 0x17, 0x84, 0x72, 0xf4, 0x74, 0xe5, 0x22, 0x54, 0x2e, 0x48, 0xee, 0x3d, 0x5d,
	0xb9, 0xa0, 0xd5, 0xd7, 0x00, 0xaf, 0xac, 0x75, 0x99, 0x36, 0x09, 0xa1, 0x38, 0x86, 0x51, 0x91,
	0x10, 0x9f, 0x60, 0xa0, 0xea, 0x47, 0x56, 0xac, 0xe1, 0x36, 0x6b, 0xc5, 0x9a, 0xd5, 0x9f, 0x63,
	0x38, 0xe4, 0x8f, 0xe2, 0xdb, 0xaf, 0x72, 0x06, 0x91, 0xa7, 0xc4, 0x85, 0xbc, 0x48, 0x85, 0xa0,
	0x56, 0x53, 0x5b, 0x99, 0x70, 0xc4, 0x48, 0x85, 0x40, 0x08, 0xd8, 0xf3, 0xd6, 0x91, 0x1c, 0x2d,
	0x47, 0xeb, 0xa9, 0xe2, 0x67, 0xf1, 0x1c, 0xc0, 0x57, 0x25, 0x3a, 0x8f, 0x19, 0x66, 0xdc, 0xf7,
	0x44, 0xf5, 0x14, 0x71, 0x0e, 0x73, 0x63, 0xe9, 0xb6, 0xc7, 0x44, 0xcc, 0x1c, 0x1a, 0x4b, 0xd7,
	0x1d, 0x76, 0x01, 0x63, 0x4f, 0x09, 0x55, 0x5e, 0x8e, 0x97, 0x83, 0xf5, 0xfc, 0xea, 0x24, 0xae,
	0x2f, 0x00, 0xb7, 0x1a, 0x5f, 0xb3, 0xa1, 0x1a, 0x40, 0xfc, 0x00, 0x07, 0x5b, 0xf4, 0x3e, 0xc9,
	0xf1, 0x96, 0x76, 0x25, 0xca, 0x7d, 0x4e, 0x78, 0xd6, 0x4b, 0xf8, 0x25, 0xd8, 0x37, 0xbb, 0x12,
	0xd5, 0x6c, 0xdb, 0x05, 0xe2, 0x73, 0x88, 0x7c, 0x6a, 0x4b, 0x94, 0x13, 0xce, 0x39, 0xee, 0xbf,
	0xa4, 0xd6, 0x55, 0xb0, 0xc5, 0x02, 0x26, 0x45, 0x62, 0xf2, 0x2a, 0xc9, 0x51, 0x4e, 0xf9, 0xc2,
	0x3c, 0xc6, 0xe2, 0x1b, 0x98, 0xa6, 0xe8, 0x28, 0xd1, 0x86, 0x76, 0x12, 0xb8, 0xce, 0x29, 0xd7,
	0x79, 0x6b, 0x36, 0x36, 0x7e, 0xd5, 0x5a, 0xaa, 0xa3, 0x44, 0x0c, 0x13, 0x8f, 0x0f, 0xe8, 0x34,
	0xed, 0xe4, 0x8c, 0x33, 0x44, 0x97, 0x71, 0xdd, 0x38, 0xea, 0x91, 0x11, 0x5f, 0xc2, 0x7e, 0xe5,
	0x72, 0x34, 0xe9, 0x4e, 0x1e, 0xf4, 0xbe, 0x06, 0xe3, 0xbf, 0x05, 0x43, 0xb5, 0x44, 0xdd, 0xeb,
	0x3d, 0x26, 0x59, 0xa1, 0x0d, 0xca, 0xc3, 0xd0, 0x6b, 0x1b, 0x8b, 0x25, 0xcc, 0x32, 0xf4, 0xa9,
	0xd3, 0x25, 0x69, 0x6b, 0xe4, 0x9c, 0xed, 0xbe, 0x54, 0x13, 0xda, 0x78, 0x72, 0x55, 0xca, 0xc4,
	0x51, 0x20, 0x7a, 0x92, 0x78, 0x01, 0x53, 0xdc, 0x6c, 0x30, 0x25, 0xfd, 0x80, 0xf2, 0x98, 0xef,
	0xe5, 0x3c, 0x76, 0x65, 0x1a, 0x3f, 0xce, 0x8e, 0xea, 0x00, 0xf1, 0x19, 0x44, 0xf5, 0x50, 0x92,
	0x3c, 0x79, 0x2f, 0x19, 0x4c, 0xb1, 0x86, 0x7d, 0x7c, 0x57, 0x6a, 0x87, 0x5e, 0x8a, 0xf7, 0x72,
	0xad, 0x2d, 0x2e, 0xe0, 0x38, 0x71, 0x98, 0xdc, 0xf6, 0x8f, 0x71, 0xca, 0x4d, 0x1e, 0xd5, 0xfa,
	0x8f, 0xbd, 0xa3, 0x9c, 0x43, 0x54, 0x5a, 0x6d, 0x48, 0x9e, 0x71, 0xc9, 0x23, 0x2e, 0xd9, 0xcd,
	0x87, 0x0a, 0xee, 0xea, 0x77, 0x98, 0xf0, 0x3f, 0xfe, 0x46, 0xff, 0x6f, 0x25, 0x88, 0x25, 0x44,
	0xbc, 0x82, 0x9a, 0xc9, 0x86, 0xee, 0x7e, 0xa8, 0x60, 0x88, 0x8f, 0x61, 0x4f, 0x9b, 0x8d, 0x6d,
	0xa6, 0x79, 0xfa, 0xf8, 0xbf, 0x28, 0x96, 0x57, 0x6f, 0x61, 0xde, 0x8e, 0x57, 0xb3, 0x9d, 0xce,
	0x20, 0x22, 0x4b, 0x49, 0xc1, 0x6f, 0x19, 0xa9, 0x10, 0x88, 0x4f, 0x61, 0xef, 0x5e, 0x93, 0x97,
	0xc3, 0xe5, 0x68, 0x3d, 0xbb, 0x3a, 0xe4, 0x56, 0xdb, 0xae, 0x14, 0x5b, 0x57, 0x7f, 0x0f, 0x9a,
	0xfd, 0x75, 0x1d, 0xb6, 0xab, 0xf8, 0x1e, 0x26, 0x6f, 0x12, 0xcf, 0x92, 0x38, 0xe9, 0x32, 0x9a,
	0x41, 0x5e, 0xc8, 0x4e, 0xfa, 0xcf, 0x82, 0xbc, 0x80, 0xc9, 0xcf, 0x48, 0x1f, 0x4c, 0xec, 0x9d,
	0x52, 0x7c, 0x07, 0xf0, 0x93, 0x36, 0x59, 0x38, 0x83, 0x10, 0x1d, 0xdc, 0xee, 0x8b, 0xc5, 0xe9,
	0xbf, 0xb4, 0xe6, 0x0d, 0x2b, 0x98, 0xbc, 0xcc, 0x42, 0x96, 0xe8, 0x95, 0x5b, 0x00, 0xc3, 0xbc,
	0xbd, 0xc5, 0x39, 0x4c, 0x5b, 0xc6, 0x7f, 0x08, 0x5a, 0x0f, 0xee, 0xc6, 0xbc, 0xeb, 0xbe, 0xfd,
	0x27, 0x00, 0x00, 0xff, 0xff, 0x61, 0xab, 0x73, 0x2f, 0x5f, 0x06, 0x00, 0x00,
}
